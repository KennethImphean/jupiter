import Head from 'next/head';
import OrgDirectoryHeader from '@components/OrgDirectoryHeader';
import OrgDirectorySidebar from '@components/OrgDirectorySidebar';
import OrgDirectoryGrid from '@components/OrgDirectoryGrid';
import { useState } from 'react';
import { createInnerTRPCContext } from '@src/server/api/trpc';
import { createProxySSGHelpers } from '@trpc/react-query/ssg';
import { appRouter } from '@src/server/api/root';
import superjson from 'superjson';
import { api } from '@src/utils/api';
import type Club from '@src/models/club';

const DirectoryHead = () => (
  <Head>
    <title>Directory - Jupiter</title>
    <meta name="description" content="Generated by create next app" />
    <link rel="icon" href="/favicon.ico" />
  </Head>
);

const Directory = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [clubs, setClubs] = useState<Club[]>([]);
  api.club.byName.useQuery(
    { name: searchTerm },
    {
      onSuccess: (data) => {
        // Debounce
        setTimeout(() => {
          setClubs(data);
        }, 300);
      },
    },
  );

  return (
    <main className="p-5">
      <DirectoryHead />
      <div className="grid grid-cols-1 gap-4 md:grid-cols-6">
        <OrgDirectoryHeader
          setSearchTerm={setSearchTerm}
          searchTerm={searchTerm}
        />
      </div>
      <div className="grid grid-cols-3 grid-rows-2 items-center gap-4 md:grid-cols-6 md:grid-rows-1">
        <div className="hidden h-full w-full md:block">
          <OrgDirectorySidebar />
        </div>
        <div className="col-span-3 h-full w-full overflow-y-scroll md:col-span-4">
          <OrgDirectoryGrid clubs={clubs} />
        </div>
      </div>
    </main>
  );
};

export default Directory;

export async function getStaticProps() {
  const ssg = createProxySSGHelpers({
    router: appRouter,
    ctx: createInnerTRPCContext({ session: null }),
    transformer: superjson, // optional - adds superjson serialization
  });
  await ssg.club.byName.prefetch({ name: '' });

  return {
    props: {
      trpcState: ssg.dehydrate(),
    },
    revalidate: 1,
  };
}
